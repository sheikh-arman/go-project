apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mysql-backup-restore
  labels:
    app: stash
rules:
- apiGroups:
  - stash.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "appbindings"
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - "secrets"
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - "events"
  verbs: ["create"]

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mysql-backup-restore
  namespace: demo
  labels:
    app: stash

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mysql-backup-restore
  namespace: demo
  labels:
    app: stash
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: mysql-backup-restore
subjects:
- kind: ServiceAccount
  name: mysql-backup-restore
  namespace: demo

---
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: update-status
spec:
  image: appscode/stash:mysql
  args:
    - update-status
    - --namespace=${NAMESPACE:=default}
    - --repository=${REPOSITORY_NAME:=}
    - --backup-session=${BACKUP_SESSION:=}
    - --restore-session=${RESTORE_SESSION:=}
    - --output-dir=${outputDir:=}
    - --enable-status-subresource=${ENABLE_STATUS_SUBRESOURCE:=true}
---
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: mysql-backup
spec:
  image: appscode/stash:mysql
  args:
  - backup-mysql
  - --v=10
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --secret-dir=/etc/repository/secret # specified
  - --scratch-dir=/tmp # specified
  #- --enable-cache
  #- --backup-dirs=${TARGET_DIRECTORIES:=}
  - --hostname=${HOSTNAME:=host-0}
#  - --mysql-args=${mysqlArgs:=} # user input
  - --namespace=${NAMESPACE:=default}
  - --app-binding=${TARGET_NAME:=}
  - --retention-keep-last=${RETENTION_KEEP_LAST:=0} # TODO: complete list
  - --retention-keep-tags=${RETENTION_KEEP_TAGS:=}
  - --retention-prune=${RETENTION_PRUNE:=false}
  - --retention-dry-run=${RETENTION_DRY_RUN:=false}
  - --output-dir=${outputDir:=}
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  #- --metrics-enabled
  #- --metrics-pushgateway-url
  #- --metrics-dir
  #- --metrics-labels
  volumeMounts:
  - name: ${secretVolume}
    mountPath: /etc/repository/secret
---
apiVersion: stash.appscode.com/v1beta1
kind: Function
metadata:
  name: mysql-restore
spec:
  image: appscode/stash:mysql
  args:
  - restore-mysql
  - --provider=${REPOSITORY_PROVIDER:=}
  - --bucket=${REPOSITORY_BUCKET:=}
  - --endpoint=${REPOSITORY_ENDPOINT:=}
  - --path=${REPOSITORY_PREFIX:=}
  - --secret-dir=/etc/repository/secret # specified
  - --scratch-dir=/tmp # specified
  #- --enable-cache
  - --hostname=${HOSTNAME:=host-0}
  #- --restore-dirs=${RESTORE_DIRECTORIES:=}
#  - --mysql-args=${mysqlArgs:=} # user input
  - --namespace=${NAMESPACE:=}
  - --app-binding=${TARGET_NAME:=}
  - --snapshot=${RESTORE_SNAPSHOTS:=} # TODO: sliceVar
  - --output-dir=${outputDir:=}
  - --enable-cache=${ENABLE_CACHE:=true}
  - --max-connections=${MAX_CONNECTIONS:=0}
  #- --metrics-enabled
  #- --metrics-pushgateway-url
  #- --metrics-dir
  #- --metrics-labels
  volumeMounts:
  - name: ${secretVolume}
    mountPath: /etc/repository/secret

---
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: mysql-backup-task
spec:
  steps:
  - name: mysql-backup
    params:
    - name: outputDir
      value: /tmp/output # specified
    - name: secretVolume
      value: secret-volume # specified
  - name: update-status
    params:
    - name: outputDir
      value: /tmp/output # specified
  volumes:
  - name: secret-volume
    secret:
      secretName: ${REPOSITORY_SECRET_NAME}
---
apiVersion: stash.appscode.com/v1beta1
kind: Task
metadata:
  name: mysql-restore-task
spec:
  steps:
  - name: mysql-restore
    params:
    - name: outputDir
      value: /tmp/output # specified
    - name: secretVolume
      value: secret-volume # specified
  - name: update-status
    params:
    - name: outputDir
      value: /tmp/output # specified
  volumes:
  - name: secret-volume
    secret:
      secretName: ${REPOSITORY_SECRET_NAME}
